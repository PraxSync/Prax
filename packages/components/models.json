# docker/docker-compose.yml
version: '3.1'

services:
  redis:
    image: redis:alpine
    container_name: prax-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - prax-net

  prax:
    container_name: prax-main
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    volumes:
      - ../.prax:/root/.prax
    environment:
      - PORT=${PORT:-3000}
      - DATABASE_PATH=/root/.prax
      - SECRETKEY_PATH=/root/.prax
      - LOG_PATH=/root/.prax/logs
      - BLOB_STORAGE_PATH=/root/.prax/storage
      - MODE=queue
      - QUEUE_NAME=prax-queue
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - prax-net

  prax-worker:
    container_name: prax-worker
    build:
      context: ..
      dockerfile: docker/worker/Dockerfile
    volumes:
      - ../.prax:/root/.prax
    environment:
      - WORKER_PORT=${WORKER_PORT:-5566}
      - DATABASE_PATH=/root/.prax
      - SECRETKEY_PATH=/root/.prax
      - LOG_PATH=/root/.prax/logs
      - BLOB_STORAGE_PATH=/root/.prax/storage
      - MODE=queue
      - QUEUE_NAME=prax-queue
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - prax
    networks:
      - prax-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./otel.config.yml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888
      - 8888:8888
      - 8889:8889
      - 13133:13133
      - 4317:4317
      - 4318:4318
      - 55679:55679

volumes:
  redis_data:
    driver: local

networks:
  prax-net:
    driver: bridge
# docker/otel.config.yml
receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
      grpc:
        endpoint: 0.0.0.0:4317
  hostmetrics:
    collection_interval: 10s
    scrapers:
      paging:
        metrics:
          system.paging.utilization:
            enabled: true
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      load:
      memory:
      network:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otelcol'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']
  filelog:
    include_file_path: true
    poll_interval: 10s
    include:
      - /var/log/**/*example*/*.log

processors:
  batch:
    send_batch_max_size: 100
    send_batch_size: 10
    timeout: 10s

connectors:
  datadog/connector:

exporters:
  datadog/exporter:
    api:
      site: us5.datadoghq.com
      key: "replace_api_key"

service:
  pipelines:
    metrics:
      receivers: [datadog/connector, hostmetrics, prometheus, otlp]
      processors: [batch]
      exporters: [datadog/exporter]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [datadog/connector, datadog/exporter]
    logs:
      receivers: [otlp, filelog]
      processors: [batch]
      exporters: [datadog/exporter]
# docker/prometheus.yml
global:
  scrape_interval: 5s
scrape_configs:
  - job_name: "prax"
    static_configs:
      - targets: ["localhost:8080", "localhost:3000"]
    metrics_path: /api/v1/metrics/
    scheme: http
# docker/prometheus.yml
global:
  scrape_interval: 5s
scrape_configs:
  - job_name: "prax"
    static_configs:
      - targets: ["localhost:8080", "localhost:3000"]
    metrics_path: /api/v1/metrics/
    scheme: http
// packages/api-documentation/package.json
{
  "name": "prax-api",
  "version": "1.0.0",
  "description": "Prax API documentation server",
  "scripts": {
    "build": "tsc",
    "start": "node dist/index.js",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0"
  },
  "license": "UNLICENSED",
  "dependencies": {
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0"
  },
  "devDependencies": {
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.3",
    "tsc-watch": "^6.0.4"
  }
}
// packages/api-documentation/nodemon.json
{
  "ignore": ["**/*.spec.ts", ".git", "node_modules"],
  "watch": ["src"],
  "exec": "ts-node ./src/index.ts",
  "ext": "ts, yml"
}
<!-- packages/api-documentation/README.md -->

# Prax API Docs

English

A list of Prax public APIs, allowing users to programmatically trigger features available in the main application UI.

## Run standalone

```sh
cd prax
pnpm start
